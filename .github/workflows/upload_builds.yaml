name: Build and Release on Demand

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'
      
      - name: Build for Linux
        run: |
          GOARCH=amd64 GOOS=linux CGO_ENABLED=0 go build -ldflags '-w -s -buildid=' -o bin/goss
          tar -czvf bin/goss_linux.tar -C bin goss
      
      - name: Build for Windows
        run: |
          GOARCH=amd64 GOOS=windows CGO_ENABLED=0 go build -ldflags '-w -s -buildid=' -o bin/goss.exe
          zip -j bin/goss_windows.zip bin/goss.exe
      
      - name: Upload Linux binary as artifact
        uses: actions/upload-artifact@v2
        with:
          name: goss_linux.tar
          path: bin/goss_linux.tar
      
      - name: Upload Windows binary as artifact
        uses: actions/upload-artifact@v2
        with:
          name: goss_windows.zip
          path: bin/goss_windows.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ github.run_id }}
          release_name: Release ${{ github.run_id }}
          draft: false
          prerelease: false
      
      - name: Download Linux binary
        uses: actions/download-artifact@v2
        with:
          name: goss_linux.tar
          path: bin
      
      - name: Download Windows binary
        uses: actions/download-artifact@v2
        with:
          name: goss_windows.zip
          path: bin
      
      - name: Upload Linux binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/goss_linux.tar
          asset_name: goss_linux.tar
          asset_content_type: application/gzip
      
      - name: Upload Windows binary to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/goss_windows.zip
          asset_name: goss_windows.zip
          asset_content_type: application/zip
